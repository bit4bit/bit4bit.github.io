<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Bit4bit Integraciones</title><link>http://bit4bit.github.io/post/</link><description>Recent content in Posts on Bit4bit Integraciones</description><generator>Hugo -- gohugo.io</generator><language>es-co</language><managingEditor>bit4bit@riseup.net (Jovany Leandro G.C)</managingEditor><webMaster>bit4bit@riseup.net (Jovany Leandro G.C)</webMaster><lastBuildDate>Tue, 20 Jun 2023 16:47:56 -0500</lastBuildDate><atom:link href="http://bit4bit.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Escribiendo un Modulo de Tryton ERP Básico 1</title><link>http://bit4bit.github.io/post/writing_module_trytond_basics_1/</link><pubDate>Tue, 20 Jun 2023 16:47:56 -0500</pubDate><author>bit4bit@riseup.net (Jovany Leandro G.C)</author><guid>http://bit4bit.github.io/post/writing_module_trytond_basics_1/</guid><description>&lt;p>Tryton ERP es un excelente framework y mas su versatilidad a la hora
de personalizar o bien escribir módulos, a continuación estudiaremos
un poco como extender el comportamiento y la vista de los módulos el que considero
como el primer paso para aprender a personalizar a trytond a nivel de codigo,
asumo que se tiene conocimiento de Python, Tryton ERP y desarrollo de software en general.&lt;/p>
&lt;p>Nuestra primera tarea es extender el modulo &lt;a href="https://docs.tryton.org/projects/modules-party/en/latest/index.html">party&lt;/a>
y adicionar el campo &lt;a href="https://www.dane.gov.co/files/sen/nomenclatura/ciiu/CIIU_Rev_4_AC2020.pdf">CIIU&lt;/a>.&lt;/p>
&lt;h2 id="creación-del-modulo">Creación del modulo&lt;/h2>
&lt;p>Primero instalamos dependencias necesarias para el desarrollo del módulo.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pip3 install &lt;span style="color:#008080">trytond&lt;/span>&lt;span style="font-weight:bold">==&lt;/span>6.8.0 --user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip3 install proteus --user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ahora creamos el módulo usando plantilla por medio de &lt;a href="https://www.cookiecutter.io/">cookiecutter&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>cookiecutter git+https://gitlab.com/bit4bit/cookiecutter-tryton-module.git --directory template --no-input &lt;span style="color:#008080">module_name&lt;/span>&lt;span style="font-weight:bold">=&lt;/span>party_ciiu &lt;span style="color:#008080">version&lt;/span>&lt;span style="font-weight:bold">=&lt;/span>6.8.0 &lt;span style="color:#008080">test_with_scenario&lt;/span>&lt;span style="font-weight:bold">=&lt;/span>party_ciiu.rst
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lo anterior nos crea un directorio &lt;code>party_ciiu&lt;/code> con la estructura de un módulo de tryton.&lt;/p>
&lt;p>Activamos el módulo en modo desarrollo.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">cd&lt;/span> party_ciiu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python3 setup.py develop --user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Para confirmar que el módulo este operativo ejecutamos las pruebas.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">cd&lt;/span> party_ciiu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python3 -munittest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Y si todo es correcto veríamos&lt;/p>
&lt;pre>
Ran 22 tests in 2.268s
OK
&lt;/pre>
&lt;h2 id="adición-campo-ciiu_code">Adición campo &lt;code>ciiu_code&lt;/code>&lt;/h2>
&lt;p>Nos vamos a orientador durante el desarrollo de la siguiente manera:&lt;/p>
&lt;ul>
&lt;li>mantener el modulo todo el tiempo en operación es decir, no deberíamos tener errores por mucho mas que unos minutos.&lt;/li>
&lt;li>aplazar lo que mas podamos el trabajo sobre vista del modulo, ya que cuando editamos la vista se hace visible para que el usuario interactué con el modulo y si este esta incompleto abrimos el camino a las inconsistencias en el sistema.&lt;/li>
&lt;/ul>
&lt;p>Para avanzar y conocer el progreso de nuestro desarrollo, procederemos de la siguiente manera:&lt;/p>
&lt;ul>
&lt;li>describimos los escenarios o pruebas que esperamos&lt;/li>
&lt;li>ejecutamos los escenarios o pruebas&lt;/li>
&lt;li>corregimos el error, aclaramos la intención y volvemos al primer paso&lt;/li>
&lt;/ul>
&lt;p>Vamos a empezar creando el escenario que refleje nuestro objetivo de adicionar el campo &lt;code>ciiu_code&lt;/code>&lt;/p>
&lt;p>&lt;strong>tests/scenario_create_party_with_ciiu_code.rst&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rst" data-lang="rst">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">===================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">Crear Party con campo ciiu_code Scenario&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">===================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>Dependencias&lt;span style="color:#b84">::&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;gt;&amp;gt;&amp;gt; from proteus import Model, Wizard&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;gt;&amp;gt;&amp;gt; from trytond.tests.tools import activate_modules
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84">&lt;/span>Activacion de modulos&lt;span style="color:#b84">::&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;gt;&amp;gt;&amp;gt; config = activate_modules(&amp;#39;party_ciiu&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84">&lt;/span>ciiu_code es opcional al crear un nuevo party&lt;span style="color:#b84">::&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;gt;&amp;gt;&amp;gt; Party = Model.get(&amp;#39;party.party&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;gt;&amp;gt;&amp;gt; party = Party()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;gt;&amp;gt;&amp;gt; party.ciiu_code = &amp;#39;0111&amp;#39; # valor real esperados
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;gt;&amp;gt;&amp;gt; party.save()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;gt;&amp;gt;&amp;gt; party.ciiu_code
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b84"> &amp;#39;0111&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ejecutamos los escenarios&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>python3 -munittest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>y vemos nuestro primer error&lt;/p>
&lt;pre>
Failed example:
Party = Model.get('party.party')
...
File "/home/bit4bit/.local/lib/python3.9/site-packages/trytond/pool.py", line 190, in get
return self._pool[self.database_name][type][name]
KeyError: 'party.party'
&lt;/pre>
&lt;p>&lt;code>KeyError: 'party.party'&lt;/code> nos indica que estamos intentado acceder a un modelo que
no esta registrado, para corregir vamos a instalar el modulo y notificar que nuestro modulo requiere del modulo &lt;code>party&lt;/code> para operar.&lt;/p>
&lt;p>instalamos dependencia&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pip3 install trytond-party&lt;span style="font-weight:bold">==&lt;/span>6.8.0 --user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>indicamos a trytond que requerimos del modulo &lt;code>party&lt;/code>&lt;/p>
&lt;p>&lt;strong>tryton.cfg&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-config" data-lang="config">[tryton]
version=6.8.0
depends:
ir
party
xml:
&lt;/code>&lt;/pre>&lt;p>ejecutamos los escenarios&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>python3 -munittest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>y vemos nuestro siguiente error&lt;/p>
&lt;pre>
Failed example:
party.ciiu_code = '0110'
Exception raised:
Traceback (most recent call last):
File "/usr/lib/python3.9/doctest.py", line 1336, in __run
exec(compile(example.source, filename, "single",
File "&lt;doctest scenario_create_party_ciiu_code.rst[5]>", line 1, in &lt;module>
party.ciiu_code = '0110'
AttributeError: 'party.party' object has no attribute 'ciiu_code'
&lt;/pre>
&lt;p>&lt;code>AttributeError: 'party.party' object has no attribute 'ciiu_code'&lt;/code> nos indica
que estamos intentando asignar un valor a un atributo que no existe en el modelo &lt;code>party.party&lt;/code>, para corregir necesitamos este atributo en &lt;code>party.party&lt;/code>.&lt;/p>
&lt;p>Extendemos el modelo &lt;code>party.party&lt;/code> y adicionamos el nuevo atributo.&lt;/p>
&lt;p>&lt;strong>party.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.pool&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> PoolMeta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.model&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> fields
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Party&lt;/span>( metaclass&lt;span style="font-weight:bold">=&lt;/span>PoolMeta):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> __name__ &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;party.party&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ciiu_code &lt;span style="font-weight:bold">=&lt;/span> fields&lt;span style="font-weight:bold">.&lt;/span>Char(&lt;span style="color:#b84">&amp;#39;CIIU CODE&amp;#39;&lt;/span>, required&lt;span style="font-weight:bold">=&lt;/span>&lt;span style="font-weight:bold">False&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Le indicamos a tryton el modelo que hemos extendido&lt;/p>
&lt;p>&lt;strong>&lt;strong>init&lt;/strong>.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.pool&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> Pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">.&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> party
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>__all__ &lt;span style="font-weight:bold">=&lt;/span> [&lt;span style="color:#b84">&amp;#39;register&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">register&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pool&lt;span style="font-weight:bold">.&lt;/span>register(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>Party,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> module&lt;span style="font-weight:bold">=&lt;/span>&lt;span style="color:#b84">&amp;#39;party_ciiu&amp;#39;&lt;/span>, type_&lt;span style="font-weight:bold">=&lt;/span>&lt;span style="color:#b84">&amp;#39;model&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ejecutamos los escenarios&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>python3 -munittest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>y por fin ya no tenemos el error&lt;/p>
&lt;pre>
Ran 24 tests in 9.231s
OK
&lt;/pre>
&lt;p>Lo anterior nos indica que ya el &lt;code>party.party&lt;/code> tiene el nuevo atributo,
pero aun no hemos realizado una implementacion aceptable, una implementacion
aceptable es una implementación que se ajuste a los escenarios planteados o acordados
con el cliente, en nuestro caso tomaremos como aceptable la implementación
del &lt;code>ciiu_code&lt;/code> cuando este valide que el &lt;a href="https://www.dane.gov.co/files/sen/nomenclatura/ciiu/CIIU_Rev_4_AC2020.pdf">formato&lt;/a> sea el correcto y este
entre los valores esperados según cliente.&lt;/p>
&lt;p>&lt;strong>tests/test_entrada_es_opcional.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.tests.test_tryton&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> ModuleTestCase, with_transaction
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.pool&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> Pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.model.exceptions&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> RequiredValidationError
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">PartyCiiu_EntradasRequeridas_TestCase&lt;/span>(ModuleTestCase):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b84">&amp;#34;Test Party Ciiu module&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> module &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;party_ciiu&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @with_transaction()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">test_ciiud_code_es_opcional&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool &lt;span style="font-weight:bold">=&lt;/span> Pool()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Party &lt;span style="font-weight:bold">=&lt;/span> pool&lt;span style="font-weight:bold">.&lt;/span>get(&lt;span style="color:#b84">&amp;#39;party.party&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party, &lt;span style="font-weight:bold">=&lt;/span> Party&lt;span style="font-weight:bold">.&lt;/span>create([{}])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">except&lt;/span> RequiredValidationError:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="font-weight:bold">.&lt;/span>fail(&lt;span style="color:#b84">&amp;#39;se espera campo `ciiu_code` como opcional&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">del&lt;/span> ModuleTestCase
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>python3 -munittest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>siendo la salida de la ejecución&lt;/p>
&lt;pre>
Ran 47 tests in 12.323s
OK
&lt;/pre>
&lt;p>Lo cual nos indica que no hubo errores, en nuestro caso esta prueba
nos garantiza que si por algún motivo cambia la obligatoriedad del campo
&lt;code>ciiu_code&lt;/code> nos alerte y tomemos las acciones pertinentes.&lt;/p>
&lt;p>Ahora procederemos con la validación del campo, es recomendable partir de la entradas erróneas,
al iniciar con la validación de las entradas erróneas se nos reduce el margen
de que el programa entre en un estado inconsistente ya que en el manejo de estas
entradas es donde usualmente se presente la mayoría de inconsistencia.&lt;/p>
&lt;p>&lt;strong>tests/test_ciiu_code.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.tests.test_tryton&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> ModuleTestCase, with_transaction
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.pool&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> Pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.model.exceptions&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> ValidationError
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">PartyCiiu_ciiu_code_TestCase&lt;/span>(ModuleTestCase):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b84">&amp;#34;Test Party Ciiu campo ciiu_code&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> module &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;party_ciiu&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @with_transaction()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">test_para_entrada_invalida_UserError&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool &lt;span style="font-weight:bold">=&lt;/span> Pool()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Party &lt;span style="font-weight:bold">=&lt;/span> pool&lt;span style="font-weight:bold">.&lt;/span>get(&lt;span style="color:#b84">&amp;#39;party.party&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party, &lt;span style="font-weight:bold">=&lt;/span> Party&lt;span style="font-weight:bold">.&lt;/span>create([{&lt;span style="color:#b84">&amp;#39;name&amp;#39;&lt;/span>: &lt;span style="color:#b84">&amp;#39;CIIU&amp;#39;&lt;/span>}])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">with&lt;/span> self&lt;span style="font-weight:bold">.&lt;/span>assertRaises(ValidationError):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>ciiu_code &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;99999&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>save()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">with&lt;/span> self&lt;span style="font-weight:bold">.&lt;/span>assertRaises(ValidationError):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>ciiu_code &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>save()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">with&lt;/span> self&lt;span style="font-weight:bold">.&lt;/span>assertRaises(ValidationError):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>ciiu_code &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;9999&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>save()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">del&lt;/span> ModuleTestCase
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>python3 -munittest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre>
Traceback (most recent call last):
File "/home/bit4bit/.local/lib/python3.9/site-packages/trytond/tests/test_tryton.py", line 223, in wrapper
result = func(*args, **kwargs)
File "/tmp/d20230621-16221-7fnzm8/party_ciiu/tests/test_ciiu_code.py", line 18, in test_para_entrada_invalida_UserError
party.save()
AssertionError: ValidationError not raised
&lt;/pre>
&lt;p>&lt;code>AssertionError: ValidationError not raised&lt;/code> nos indica que no se lanza el error,
ahora procederemos a corregir, como hemos visto corregir seria realizar la implementación del código o bien corregir un defecto.&lt;/p>
&lt;p>&lt;strong>party_ciiu/party.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.pool&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> PoolMeta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.model&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> fields
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.i18n&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> gettext
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.model.exceptions&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> ValidationError
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Party&lt;/span>( metaclass&lt;span style="font-weight:bold">=&lt;/span>PoolMeta):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> __name__ &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;party.party&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ciiu_code &lt;span style="font-weight:bold">=&lt;/span> fields&lt;span style="font-weight:bold">.&lt;/span>Char(&lt;span style="color:#b84">&amp;#39;CIIU CODE&amp;#39;&lt;/span>, required&lt;span style="font-weight:bold">=&lt;/span>&lt;span style="font-weight:bold">False&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @classmethod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">validate_fields&lt;/span>(cls, records, field_names):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#999">super&lt;/span>()&lt;span style="font-weight:bold">.&lt;/span>validate_fields(records, field_names)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cls&lt;span style="font-weight:bold">.&lt;/span>check_fields(records, field_names)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @classmethod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">check_fields&lt;/span>(cls, records, field_names):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">if&lt;/span> field_names &lt;span style="font-weight:bold">and&lt;/span> &lt;span style="font-weight:bold">not&lt;/span> (field_names &lt;span style="font-weight:bold">&amp;amp;&lt;/span> {&lt;span style="color:#b84">&amp;#39;ciiu_code&amp;#39;&lt;/span>}):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">for&lt;/span> record &lt;span style="font-weight:bold">in&lt;/span> records:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">if&lt;/span> &lt;span style="font-weight:bold">not&lt;/span> cls&lt;span style="font-weight:bold">.&lt;/span>allowed_ciiu_code(record&lt;span style="font-weight:bold">.&lt;/span>ciiu_code):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">raise&lt;/span> ValidationError(gettext(&lt;span style="color:#b84">&amp;#39;party_ciiu.ciiu_code_invalid&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @classmethod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">allowed_ciiu_code&lt;/span>(cls, code):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># solo validamos los codigos de interes para nuestra implementacion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> codes &lt;span style="font-weight:bold">=&lt;/span> [&lt;span style="font-weight:bold">None&lt;/span>, &lt;span style="color:#b84">&amp;#39;0111&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0170&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0210&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0240&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0311&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0510&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0520&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0610&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">return&lt;/span> code &lt;span style="font-weight:bold">in&lt;/span> codes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>python3 -munittest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre>
Ran 70 tests in 15.363s
OK
&lt;/pre>
&lt;p>ya volvimos a estar estables, ahora vamos a confirmar que el &lt;code>ciiu_code&lt;/code>
este operativo para nuestra implementacion.&lt;/p>
&lt;p>&lt;strong>tests/test_ciiu_code.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.tests.test_tryton&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> ModuleTestCase, with_transaction
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.pool&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> Pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">from&lt;/span> &lt;span style="color:#555">trytond.model.exceptions&lt;/span> &lt;span style="font-weight:bold">import&lt;/span> ValidationError
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">PartyCiiu_ciiu_code_TestCase&lt;/span>(ModuleTestCase):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b84">&amp;#34;Test Party Ciiu campo ciiu_code&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> module &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;party_ciiu&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @with_transaction()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">test_para_entrada_valida_no_hay_error&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool &lt;span style="font-weight:bold">=&lt;/span> Pool()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Party &lt;span style="font-weight:bold">=&lt;/span> pool&lt;span style="font-weight:bold">.&lt;/span>get(&lt;span style="color:#b84">&amp;#39;party.party&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party, &lt;span style="font-weight:bold">=&lt;/span> Party&lt;span style="font-weight:bold">.&lt;/span>create([{&lt;span style="color:#b84">&amp;#39;name&amp;#39;&lt;/span>: &lt;span style="color:#b84">&amp;#39;CIIU Valid&amp;#39;&lt;/span>}])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># solo validamos los interes para nuestro cliente&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> company_codes &lt;span style="font-weight:bold">=&lt;/span> [&lt;span style="font-weight:bold">None&lt;/span>, &lt;span style="color:#b84">&amp;#39;0111&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0170&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0210&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0240&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0311&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0510&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0520&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;0610&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">for&lt;/span> code &lt;span style="font-weight:bold">in&lt;/span> company_codes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>ciiu_code &lt;span style="font-weight:bold">=&lt;/span> code
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>save()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @with_transaction()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">test_para_entrada_invalida_UserError&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool &lt;span style="font-weight:bold">=&lt;/span> Pool()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Party &lt;span style="font-weight:bold">=&lt;/span> pool&lt;span style="font-weight:bold">.&lt;/span>get(&lt;span style="color:#b84">&amp;#39;party.party&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party, &lt;span style="font-weight:bold">=&lt;/span> Party&lt;span style="font-weight:bold">.&lt;/span>create([{&lt;span style="color:#b84">&amp;#39;name&amp;#39;&lt;/span>: &lt;span style="color:#b84">&amp;#39;CIIU&amp;#39;&lt;/span>}])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">with&lt;/span> self&lt;span style="font-weight:bold">.&lt;/span>assertRaises(ValidationError):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>ciiu_code &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;99999&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>save()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">with&lt;/span> self&lt;span style="font-weight:bold">.&lt;/span>assertRaises(ValidationError):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>ciiu_code &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>save()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">with&lt;/span> self&lt;span style="font-weight:bold">.&lt;/span>assertRaises(ValidationError):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>ciiu_code &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">&amp;#39;9999&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> party&lt;span style="font-weight:bold">.&lt;/span>save()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">del&lt;/span> ModuleTestCase
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>python3 -munittest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre>
Ran 71 tests in 15.529s
OK
&lt;/pre>
&lt;p>excelente ahora que hemos validado el comportamiento aceptable por el cliente,
procedemos a activarlo en la interfaz del usuario.&lt;/p>
&lt;p>le indicamos al tryton que vamos a extender las vista &lt;code>party.party_view_tree&lt;/code> usando el archivo &lt;code>view/party_list.xml&lt;/code> y &lt;code>party.party_view_form&lt;/code> con el archivo &lt;code>view/party_form.xml&lt;/code>&lt;/p>
&lt;p>&lt;strong>party.xml&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999;font-weight:bold">&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000080">&amp;lt;tryton&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;data&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;record&lt;/span> &lt;span style="color:#008080">model=&lt;/span>&lt;span style="color:#b84">&amp;#34;ir.ui.view&amp;#34;&lt;/span> &lt;span style="color:#008080">id=&lt;/span>&lt;span style="color:#b84">&amp;#34;party_view_tree&amp;#34;&lt;/span>&lt;span style="color:#000080">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;field&lt;/span> &lt;span style="color:#008080">name=&lt;/span>&lt;span style="color:#b84">&amp;#34;model&amp;#34;&lt;/span>&lt;span style="color:#000080">&amp;gt;&lt;/span>party.party&lt;span style="color:#000080">&amp;lt;/field&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;field&lt;/span> &lt;span style="color:#008080">name=&lt;/span>&lt;span style="color:#b84">&amp;#34;inherit&amp;#34;&lt;/span> &lt;span style="color:#008080">ref=&lt;/span>&lt;span style="color:#b84">&amp;#34;party.party_view_tree&amp;#34;&lt;/span>&lt;span style="color:#000080">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;field&lt;/span> &lt;span style="color:#008080">name=&lt;/span>&lt;span style="color:#b84">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000080">&amp;gt;&lt;/span>party_list&lt;span style="color:#000080">&amp;lt;/field&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;/record&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;record&lt;/span> &lt;span style="color:#008080">model=&lt;/span>&lt;span style="color:#b84">&amp;#34;ir.ui.view&amp;#34;&lt;/span> &lt;span style="color:#008080">id=&lt;/span>&lt;span style="color:#b84">&amp;#34;party_view_form&amp;#34;&lt;/span>&lt;span style="color:#000080">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;field&lt;/span> &lt;span style="color:#008080">name=&lt;/span>&lt;span style="color:#b84">&amp;#34;model&amp;#34;&lt;/span>&lt;span style="color:#000080">&amp;gt;&lt;/span>party.party&lt;span style="color:#000080">&amp;lt;/field&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;field&lt;/span> &lt;span style="color:#008080">name=&lt;/span>&lt;span style="color:#b84">&amp;#34;inherit&amp;#34;&lt;/span> &lt;span style="color:#008080">ref=&lt;/span>&lt;span style="color:#b84">&amp;#34;party.party_view_form&amp;#34;&lt;/span>&lt;span style="color:#000080">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;field&lt;/span> &lt;span style="color:#008080">name=&lt;/span>&lt;span style="color:#b84">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000080">&amp;gt;&lt;/span>party_form&lt;span style="color:#000080">&amp;lt;/field&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;/record&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;/data&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000080">&amp;lt;/tryton&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>view/party_form.xml&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999;font-weight:bold">&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000080">&amp;lt;data&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;xpath&lt;/span> &lt;span style="color:#008080">expr=&lt;/span>&lt;span style="color:#b84">&amp;#34;//page[@id=&amp;#39;general&amp;#39;]&amp;#34;&lt;/span> &lt;span style="color:#008080">position=&lt;/span>&lt;span style="color:#b84">&amp;#34;after&amp;#34;&lt;/span>&lt;span style="color:#000080">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;field&lt;/span> &lt;span style="color:#008080">name=&lt;/span>&lt;span style="color:#b84">&amp;#34;ciiu_code&amp;#34;&lt;/span>&lt;span style="color:#000080">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;/xpath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000080">&amp;lt;/data&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>view/party_list.xml&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999;font-weight:bold">&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000080">&amp;lt;data&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;xpath&lt;/span> &lt;span style="color:#008080">expr=&lt;/span>&lt;span style="color:#b84">&amp;#34;//field[@name=&amp;#39;name&amp;#39;]&amp;#34;&lt;/span> &lt;span style="color:#008080">position=&lt;/span>&lt;span style="color:#b84">&amp;#34;after&amp;#34;&lt;/span>&lt;span style="color:#000080">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;field&lt;/span> &lt;span style="color:#008080">name=&lt;/span>&lt;span style="color:#b84">&amp;#34;ciiu_code&amp;#34;&lt;/span>&lt;span style="color:#000080">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000080">&amp;lt;/xpath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000080">&amp;lt;/data&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>e informamos a tryton nuestra intención sobre cambios a la vista, adicionando &lt;code>party.xml&lt;/code> a la lista &lt;code>xml&lt;/code> en &lt;code>tryton.cfg&lt;/code>&lt;/p>
&lt;p>&lt;strong>tryton.cfg&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-config" data-lang="config">[tryton]
version=6.8.0
depends:
ir
party
xml:
party.xml
&lt;/code>&lt;/pre>&lt;p>Para finalizar me gustaría comentar acerca de como usamos los dos mecanismos que ofrece &lt;strong>trytond&lt;/strong> para las pruebas, estos son:&lt;/p>
&lt;ol>
&lt;li>archivos &lt;strong>.rst&lt;/strong> o &lt;strong>doctests&lt;/strong>&lt;/li>
&lt;li>pruebas por medio de &lt;strong>unittest&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>Usamos las pruebas &lt;strong>doctests&lt;/strong> para verificar que el modulo opere aceptable mente en los
escenarios planteados, y usamos &lt;strong>unittest&lt;/strong> ya para verificar en detalle el comportamiento
del modulo, diríamos que es una lupa a los escenarios de &lt;strong>doctests&lt;/strong>.&lt;/p></description></item><item><title>Markdown To Application</title><link>http://bit4bit.github.io/post/mdtoapp/</link><pubDate>Mon, 12 Jun 2023 20:59:24 -0500</pubDate><author>bit4bit@riseup.net (Jovany Leandro G.C)</author><guid>http://bit4bit.github.io/post/mdtoapp/</guid><description>&lt;p>&lt;a href="https://chiselapp.com/user/bit4bit/repository/bit4bit_website/file?name=code/mdtoapp.rb">&lt;strong>mdotapp&lt;/strong>&lt;/a> es otra herramienta más para la programación literaria,
pero con un objetivo practico: hacer ejecutable los post de este blog, la diferencia fundamental con otras herramientas es que fácilmente
se puede crea una jerarquía de archivos de código y ejecutar el documento.&lt;/p>
&lt;h1 id="uso">Uso&lt;/h1>
&lt;p>se permiten los siguientes atributos en el bloque:&lt;/p>
&lt;ul>
&lt;li>&lt;code>@mdtoapp&lt;/code> marcar el bloque para ser procesado por &lt;code>mdtoapp&lt;/code>&lt;/li>
&lt;li>&lt;code>file:&amp;lt;archivo&amp;gt;&lt;/code> escribir contenido en el archivo indicado, se puede indicar una ruta de directorios.&lt;/li>
&lt;li>&lt;code>hook:execute&lt;/code> el bloque se debe ejecutar&lt;/li>
&lt;li>&lt;code>executable:&amp;lt;command&amp;gt;&lt;/code> indicar un comando diferente a &lt;code>sh&lt;/code> para ejecutar el bloque&lt;/li>
&lt;li>&lt;code>@silence&lt;/code> no imprimir salida de la ejecución del bloque&lt;/li>
&lt;/ul>
&lt;p>la ejecución de los bloques es en el orden declarados en el documento.&lt;/p>
&lt;h2 id="ejemplos">Ejemplos&lt;/h2>
&lt;p>ejecutar un script&lt;/p>
&lt;pre>
```sh @mdtoapp file:date.sh hook:execute
date
```
&lt;/pre>
&lt;p>se puede crear una jerarquía de archivos&lt;/p>
&lt;pre>
```sh @mdtoapp file:demo/demo.sh
echo 'hola'
```
&lt;/pre>
&lt;pre>
```sh @mdtoapp file:run.sh hook:execute
bash demo/demo.sh
```
&lt;/pre>
&lt;p>para agrupar diferentes bloques en un mismo archivo usar el mismo nombre de archivo&lt;/p>
&lt;pre>
```sh @mdtoapp file:demo.sh
NAME=mdtoapp
```
&lt;/pre>
&lt;pre>
```sh @mdtoapp file:demo.sh hook:execute
echo $NAME
```
&lt;/pre>
&lt;p>crear un archivo de python y ejecutar las pruebas&lt;/p>
&lt;pre>
```python @mdtoapp file:test.py hook:execute executable:python3
import unittest
class TestStringMethods(unittest.TestCase):
def test_upper(self):
self.assertEqual('foo'.upper(), 'FOO')
def test_isupper(self):
self.assertTrue('FOO'.isupper())
self.assertFalse('Foo'.isupper())
def test_split(self):
s = 'hello world'
self.assertEqual(s.split(), ['hello', 'world'])
# check that s.split fails when the separator is not a string
with self.assertRaises(TypeError):
s.split(2)
if __name__ == '__main__':
unittest.main()
```
&lt;/pre>
&lt;p>&lt;code>mdtoapp &amp;lt;mi archivo markdown a ejecutar&amp;gt;&lt;/code>&lt;/p></description></item><item><title>Infrastructure Behavior Driven-Development (WIP)</title><link>http://bit4bit.github.io/post/infrastructure_behavior_driven_development/</link><pubDate>Mon, 12 Jun 2023 14:59:38 -0500</pubDate><author>bit4bit@riseup.net (Jovany Leandro G.C)</author><guid>http://bit4bit.github.io/post/infrastructure_behavior_driven_development/</guid><description>&lt;p>(WIP)&lt;/p>
&lt;p>&lt;code>Ahí más inventores que inventos dice un amigo mio&lt;/code>.&lt;/p>
&lt;p>Como Desarrollador y Operador de plataformas de software orientadas
a telefonía (VOIP) y como practicante de TDD, me he visto envuelto en mayores responsabilidades
y por lo tanto en la necesidad de mejorar el proceso de configuración y mantenimiento de los diferentes
servicios, en este ejercicio he llegado a la conclusión que muchos
otros ya han llegado y es usar la práctica de un entorno de pruebas automatizadas
para configurar y probar los servicios.&lt;/p>
&lt;p>Lo que buscamos de esta práctica es:&lt;/p>
&lt;ul>
&lt;li>que la configuración de servicios entre en un ciclo de integración y despliegue continuo.&lt;/li>
&lt;li>que la configuración de los servicios este orientado a comportamientos esperados.&lt;/li>
&lt;li>tener un mecanismo para obtener rápidamente feedback en la configuración de los servicios.&lt;/li>
&lt;/ul>
&lt;p>Para ilustrar como proceder vamos a configurar el servicio &lt;strong>pure-ftpd&lt;/strong>
en base a una serie de requerimientos, usando una librería de pruebas automatizadas,
en este caso usare &lt;strong>rspec&lt;/strong> y &lt;strong>ruby&lt;/strong> para el ejercicio.&lt;/p>
&lt;p>inicializamos el entorno de pruebas de &lt;strong>rspec&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>rspec --init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>iniciamos con una prueba fundamental y es verificar
la sintaxis de configuración.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">require&lt;/span> &lt;span style="color:#b84">&amp;#39;spec_helper&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">require&lt;/span> &lt;span style="color:#b84">&amp;#39;tempfile&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">validate_syntax&lt;/span>(config_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b84">%x[timeout 1 /usr/sbin/pure-ftpd &lt;/span>&lt;span style="color:#b84">#{&lt;/span>config_path&lt;span style="color:#b84">}&lt;/span>&lt;span style="color:#b84">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $?&lt;span style="font-weight:bold">.&lt;/span>exitstatus &lt;span style="font-weight:bold">==&lt;/span> &lt;span style="color:#099">0&lt;/span> &lt;span style="font-weight:bold">||&lt;/span> $?&lt;span style="font-weight:bold">.&lt;/span>exitstatus &lt;span style="font-weight:bold">==&lt;/span> &lt;span style="color:#099">124&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>describe &lt;span style="color:#b84">&amp;#39;pure-ftpd&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let (&lt;span style="color:#b84">:conf&lt;/span>) { &lt;span style="color:#008080">Tempfile&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>new(&lt;span style="color:#b84">&amp;#39;pure-ftpd&amp;#39;&lt;/span>) }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> describe &lt;span style="color:#b84">&amp;#39;configuracion&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> it &lt;span style="color:#b84">&amp;#39;al verificar archivo invalido falla&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conf&lt;span style="font-weight:bold">.&lt;/span>write(&lt;span style="color:#b84">&amp;#39;invalidline&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conf&lt;span style="font-weight:bold">.&lt;/span>flush
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect(validate_syntax(conf&lt;span style="font-weight:bold">.&lt;/span>path))&lt;span style="font-weight:bold">.&lt;/span>to be &lt;span style="font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> it &lt;span style="color:#b84">&amp;#39;al verificar archivo valido ok&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conf&lt;span style="font-weight:bold">.&lt;/span>write(&lt;span style="color:#b84">&amp;#39;ChrootEveryone yes&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conf&lt;span style="font-weight:bold">.&lt;/span>flush
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect(validate_syntax(conf&lt;span style="font-weight:bold">.&lt;/span>path))&lt;span style="font-weight:bold">.&lt;/span>to be &lt;span style="font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>una vez tenemos un mecanismo para confirmar que la sintaxis
del archivo es correcta procedemos a confirmar que el servicio
inicializa y finaliza correctamente en presencia del archivo de configuracion indicado.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">require&lt;/span> &lt;span style="color:#b84">&amp;#39;spec_helper&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#999">require&lt;/span> &lt;span style="color:#b84">&amp;#39;tempfile&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">ftpd_start&lt;/span>(config_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pid &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#008080">Process&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>spawn(&lt;span style="color:#b84">&amp;#34;/usr/sbin/pure-ftpd &lt;/span>&lt;span style="color:#b84">#{&lt;/span>config_path&lt;span style="color:#b84">}&lt;/span>&lt;span style="color:#b84">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008080">Process&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>detach(pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#999">sleep&lt;/span> &lt;span style="color:#099">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#b84">%x{lsof -p &lt;/span>&lt;span style="color:#b84">#{&lt;/span>pid&lt;span style="color:#b84">}&lt;/span>&lt;span style="color:#b84"> -itcp -a -P -n 2&amp;gt; /dev/null}&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>chomp&lt;span style="font-weight:bold">[&lt;/span>&lt;span style="color:#808000">/TCP.+:(\d+)/&lt;/span>,&lt;span style="color:#099">1&lt;/span>&lt;span style="font-weight:bold">].&lt;/span>to_i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#b84">pid&lt;/span>: pid, &lt;span style="color:#b84">port&lt;/span>: port}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">ftpd_alive?&lt;/span>(server)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#998;font-style:italic"># http://dev.housetrip.com/2014/03/24/ruby-pid-tip/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008080">Process&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>kill(&lt;span style="color:#099">0&lt;/span>, server&lt;span style="font-weight:bold">[&lt;/span>&lt;span style="color:#b84">:pid&lt;/span>&lt;span style="font-weight:bold">]&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">rescue&lt;/span> &lt;span style="color:#008080">Errno&lt;/span>&lt;span style="font-weight:bold">::&lt;/span>&lt;span style="color:#008080">ESRCH&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">ftpd_stop&lt;/span>(server)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008080">Process&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>kill(&lt;span style="color:#099">9&lt;/span>, server&lt;span style="font-weight:bold">[&lt;/span>&lt;span style="color:#b84">:pid&lt;/span>&lt;span style="font-weight:bold">]&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">rescue&lt;/span> &lt;span style="color:#008080">Errno&lt;/span>&lt;span style="font-weight:bold">::&lt;/span>&lt;span style="color:#008080">ESRCH&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>describe &lt;span style="color:#b84">&amp;#39;pure-ftpd&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let (&lt;span style="color:#b84">:conf&lt;/span>) { &lt;span style="color:#008080">Tempfile&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>new(&lt;span style="color:#b84">&amp;#39;pure-ftpd&amp;#39;&lt;/span>) }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> describe &lt;span style="color:#b84">&amp;#39;gestión del servicio&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> it &lt;span style="color:#b84">&amp;#39;iniciar cuando el archivo de configuracion es correcto&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conf&lt;span style="font-weight:bold">.&lt;/span>write(&lt;span style="color:#b84">&amp;#39;Bind 127.0.0.1,0&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conf&lt;span style="font-weight:bold">.&lt;/span>flush
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pid &lt;span style="font-weight:bold">=&lt;/span> ftpd_start(conf&lt;span style="font-weight:bold">.&lt;/span>path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect(ftpd_alive?(pid))&lt;span style="font-weight:bold">.&lt;/span>to be &lt;span style="font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">ensure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftpd_stop(pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> it &lt;span style="color:#b84">&amp;#39;not iniciar cuando el archivo de configuracion es invalido&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conf&lt;span style="font-weight:bold">.&lt;/span>write(&lt;span style="color:#b84">&amp;#39;asdfs&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conf&lt;span style="font-weight:bold">.&lt;/span>flush
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pid &lt;span style="font-weight:bold">=&lt;/span> ftpd_start(conf&lt;span style="font-weight:bold">.&lt;/span>path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect(ftpd_alive?(pid))&lt;span style="font-weight:bold">.&lt;/span>to be &lt;span style="font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">ensure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftpd_stop(pid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!--
```ruby @mdtoapp file:spec/pure-ftpd_spec.rb
require 'spec_helper'
require 'tempfile'
require 'net/ftp'
describe 'comportamiento' do
let (:conf) { 'pure-ftpd.conf' }
```
```sh @mdtoapp @silence
echo '' > pure-ftpd.users
pure-pw mkdb pure-ftpd.pdb -f pure-ftpd.users
```
-->
&lt;p>los ejercicios anteriores nos empiezan a dar una idea de como vamos a controlar
el servicio durante las pruebas, ahora vamos a proceder a configurar el servicio
en base los requerimientos.&lt;/p>
&lt;p>pure-ftpd.conf&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">Bind 127.0.0.1,8021
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic"># funcion de utilidad para reescribir archivos de configuracion durante las pruebas&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">substitute&lt;/span>(path, match, replace)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="color:#008080">File&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>read(path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008080">File&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>write(path, content&lt;span style="font-weight:bold">.&lt;/span>sub(match, replace))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>before { substitute(&lt;span style="color:#b84">&amp;#39;pure-ftpd.conf&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;/etc/pure-ftpd.pdb&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#34;&lt;/span>&lt;span style="color:#b84">#{&lt;/span>&lt;span style="color:#008080">Dir&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>pwd&lt;span style="color:#b84">}&lt;/span>&lt;span style="color:#b84">/pure-ftpd.pdb&amp;#34;&lt;/span>) }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="no-se-permite-ingreso-anonimo">no se permite ingreso anonimo&lt;/h4>
&lt;p>pure-ftpd.conf&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">NoAnonymous yes
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>it &lt;span style="color:#b84">&amp;#39;no se permite logeo anonimo&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server &lt;span style="font-weight:bold">=&lt;/span> ftpd_start(conf)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008080">Net&lt;/span>&lt;span style="font-weight:bold">::&lt;/span>&lt;span style="color:#008080">FTP&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>open(&lt;span style="color:#b84">&amp;#34;127.0.0.1&amp;#34;&lt;/span>, &lt;span style="color:#b84">port&lt;/span>: server&lt;span style="font-weight:bold">[&lt;/span>&lt;span style="color:#b84">:port&lt;/span>&lt;span style="font-weight:bold">]&lt;/span>) &lt;span style="font-weight:bold">do&lt;/span> &lt;span style="font-weight:bold">|&lt;/span>ftp&lt;span style="font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="font-weight:bold">.&lt;/span>login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>to raise_error(&lt;span style="color:#008080">Net&lt;/span>&lt;span style="font-weight:bold">::&lt;/span>&lt;span style="color:#008080">FTPPermError&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">ensure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftpd_stop(server)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ingreso-a-usuarios-registrados-en-archivo">ingreso a usuarios registrados en archivo&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pure-pw useradd foo -f pure-ftpd.users -u nobody -d /tmp/foo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!--
```sh @mdtoapp file:pure-ftpd.users
foo:$argon2id$v=19$m=8192,t=1023,p=1$0Zf62x+GpxYoM2afDVEzPg$c5bZ16UnZJM1NAkCDIoUkrvhFwR4wsVSNp4qmyfnaFc:65534:65534::/tmp/./::::::::::::
```
-->
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pure-pw mkdb pure-ftpd.pdb -f pure-ftpd.users
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>pure-ftpd.conf&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">PureDB /etc/pure-ftpd.pdb
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>it &lt;span style="color:#b84">&amp;#39;ingreso a usuarios registrados&amp;#39;&lt;/span> &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server &lt;span style="font-weight:bold">=&lt;/span> ftpd_start(conf)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect &lt;span style="font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008080">Net&lt;/span>&lt;span style="font-weight:bold">::&lt;/span>&lt;span style="color:#008080">FTP&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>open(&lt;span style="color:#b84">&amp;#34;127.0.0.1&amp;#34;&lt;/span>, &lt;span style="color:#b84">port&lt;/span>: server&lt;span style="font-weight:bold">[&lt;/span>&lt;span style="color:#b84">:port&lt;/span>&lt;span style="font-weight:bold">]&lt;/span>) &lt;span style="font-weight:bold">do&lt;/span> &lt;span style="font-weight:bold">|&lt;/span>ftp&lt;span style="font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="font-weight:bold">.&lt;/span>login(&lt;span style="color:#b84">&amp;#39;foo&amp;#39;&lt;/span>, &lt;span style="color:#b84">&amp;#39;foo&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>not_to raise_error
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">ensure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftpd_stop(server)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!--
```ruby @mdtoapp file:spec/pure-ftpd_spec.rb
end
```
-->
&lt;!-- mdtoapp
```sh @mdtoapp hook:execute
cat pure-ftpd.conf
rspec
```
-->
&lt;p>esta práctica de usar las pruebas como mecanismo para confirmar el comportamiento esperado
del servicio puede variar en dificultad en base a:&lt;/p>
&lt;ul>
&lt;li>dependencias a otros servicios del sistema&lt;/li>
&lt;li>dependencias a archivos del sistema &lt;strong>/etc/&lt;/strong>&lt;/li>
&lt;li>configuración del servicio&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;..EN PROCESO&amp;hellip;.&lt;/p>
&lt;h3 id="más-inventores-que-inventos">Más inventores que inventos&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://developer.ibm.com/tutorials/d-bbd-guide-iac/">https://developer.ibm.com/tutorials/d-bbd-guide-iac/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>¿Público y/o Públicado?</title><link>http://bit4bit.github.io/post/published_vs_public/</link><pubDate>Thu, 16 Feb 2023 21:09:34 -0500</pubDate><author>bit4bit@riseup.net (Jovany Leandro G.C)</author><guid>http://bit4bit.github.io/post/published_vs_public/</guid><description>&lt;p>Cuando ré/factorizamos surgen nuevos elementos de los cuales
es importante determinar si son públicos y adicionalmente estan publicados,
si no hacemos esta aclaración podemos fácilmente crear referencias innecesarias,
veamos un ejemplo.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Billetera&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">initialize&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @movimientos &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">ingreso&lt;/span>(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @movimientos &lt;span style="font-weight:bold">&amp;lt;&amp;lt;&lt;/span> &lt;span style="font-weight:bold">[&lt;/span>concepto, valor&lt;span style="font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">gasto&lt;/span>(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @movimientos &lt;span style="font-weight:bold">&amp;lt;&amp;lt;&lt;/span> &lt;span style="font-weight:bold">[&lt;/span>concepto, &lt;span style="font-weight:bold">-&lt;/span>valor&lt;span style="font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">saldo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @movimientos&lt;span style="font-weight:bold">.&lt;/span>inject(&lt;span style="color:#099">0&lt;/span>) { &lt;span style="font-weight:bold">|&lt;/span>saldo, movimiento&lt;span style="font-weight:bold">|&lt;/span> saldo &lt;span style="font-weight:bold">+&lt;/span> movimiento&lt;span style="font-weight:bold">[&lt;/span>&lt;span style="color:#099">1&lt;/span>&lt;span style="font-weight:bold">]&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La clase &lt;code>Billetera&lt;/code> es &lt;code>pública&lt;/code> y &lt;code>publicada&lt;/code> (concepto común al asumir que cualquiera puede referenciar la clase y hacer uso de esta).&lt;/p>
&lt;p>Ahora realicemos una refactorización buscando la apertura del concepto movimiento.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Movimiento&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#458;font-weight:bold">self&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>&lt;span style="color:#900;font-weight:bold">debito&lt;/span>(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">new&lt;/span>(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#458;font-weight:bold">self&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>&lt;span style="color:#900;font-weight:bold">credito&lt;/span>(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">new&lt;/span>(concepto, &lt;span style="font-weight:bold">-&lt;/span>valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">balancear&lt;/span>(saldo)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> saldo &lt;span style="font-weight:bold">+&lt;/span> @valor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">private&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">initialize&lt;/span>(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @concepto &lt;span style="font-weight:bold">=&lt;/span> concepto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @valor &lt;span style="font-weight:bold">=&lt;/span> valor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Cuenta&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">initialize&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @movimientos &lt;span style="font-weight:bold">=&lt;/span> &lt;span style="font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">registrar&lt;/span>(movimiento)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @movimientos &lt;span style="font-weight:bold">&amp;lt;&amp;lt;&lt;/span> movimiento
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">saldo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @movimientos&lt;span style="font-weight:bold">.&lt;/span>inject(&lt;span style="color:#099">0&lt;/span>) { &lt;span style="font-weight:bold">|&lt;/span>saldo, movimiento&lt;span style="font-weight:bold">|&lt;/span> movimiento&lt;span style="font-weight:bold">.&lt;/span>balancear(saldo) }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">class&lt;/span> &lt;span style="color:#458;font-weight:bold">Billetera&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">initialize&lt;/span>(cuenta)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @cuenta &lt;span style="font-weight:bold">=&lt;/span> cuenta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">ingreso&lt;/span>(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @cuenta&lt;span style="font-weight:bold">.&lt;/span>registrar &lt;span style="color:#008080">Movimiento&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>debito(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">gasto&lt;/span>(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @cuenta&lt;span style="font-weight:bold">.&lt;/span>registrar &lt;span style="color:#008080">Movimiento&lt;/span>&lt;span style="font-weight:bold">.&lt;/span>credito(concepto, valor)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">def&lt;/span> &lt;span style="color:#900;font-weight:bold">saldo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @cuenta&lt;span style="font-weight:bold">.&lt;/span>saldo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Las clases &lt;code>Billetera&lt;/code>, &lt;code>Cuenta&lt;/code>, &lt;code>Movimiento&lt;/code> son por defecto &lt;code>públicas&lt;/code> (este es el alcance general pero cada lenguaje tiene
un comportamiento diferente por ejemplo en C# el alcance por defecto es &lt;code>private&lt;/code>) ahora,
¿las nuevas clases (&lt;code>Cuenta&lt;/code>, &lt;code>Movimiento&lt;/code>) deben estar &lt;code>publicadas&lt;/code>, es decir podemos referenciarlas desde otras secciones del programa?
no, no están publicadas son elementos que surgieron de la refactorización y tienen alta cohesión
con el origen de la creación (&lt;code>Billetera&lt;/code>), posteriorme a la llegada de nuevos requerimientos se valoraría si deben ser &lt;code>publicadas&lt;/code>.&lt;/p>
&lt;p>Ahora ¿Cómo podemos hacer explicito este concepto? ni idea (si tengo ideas), es algo que queda a la creatividad del equipo ya
que &lt;code>depende de&lt;/code>.&lt;/p></description></item></channel></rss>